iris_set
#data transfortmation
library(caret)
norm <- preProcess(iris_set,method=c("range"))
norm
changed_data<- predict(norm, iris_set)
changed_data
iris
#data transfortmation
library(caret)
norm <- preProcess(iris,method=c("range"))
norm
changed_data<- predict(norm, iris)
changed_data
str(iris_set)
iris_set_table = table(iris_set$Sepal.Length, iris_set$Sepal.Width)
print(iris_set_table)
print(chisq.test(iris_set_table))
str(bankdata)
bankdata<-bankdata<-read.table("C:\\Users\\pbs99\\Desktop\\R_workspace\\bank-full.csv", header=TRUE,sep=";")
str(bankdata)
bankdata.data = table(bankdata$loan, bankdata$housing)
print(bankdata.data)
bankdata
data()
str(bankdata)
bankdata.data = table(bankdata$loan, bankdata$housing)
print(bankdata.data)
print(chisq.test(bankdata.data))
str(quakes)
log.quakes <- log(quakes[3:5])
quakes2 <- prcomp(log.quakes,
center = TRUE,
scale. = TRUE)
plot(quakes2, type = "l")
summary(quakes2)
log.iris_set <- log(iris_set[1:3])
iris2 <- prcomp(log.iris_set,
center = TRUE,
scale. = TRUE)
library(DMwR)
iris_set1 <- read.csv("C:\\Users\\pbs99\\Desktop\\R_workspace\\iris_set.csv",header = TRUE)
iris_set_ch<- knnImputation(iris_set1)
sum(is.na(iris_set1))
sum(is.na(iris_set_ch))
iris_set <- read.csv("C:\\Users\\pbs99\\Desktop\\R_workspace\\iris.csv",header = TRUE)
log.iris_set <- log(iris_set[1:3])
iris2 <- prcomp(log.iris_set,
center = TRUE,
scale. = TRUE)
plot(iris2, type = "l")
summary(iris2)
plot(quakes2, type = "l")
summary(quakes2)
library(devtools)
library(ggbiplot)
install.packages("ggbiplot")
library(ggbiplot)
g <- ggbiplot(iris2, obs.scale = 1, var.scale = 1,
ellipse = TRUE,
circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
g <- ggbiplot(iris2, obs.scale = 1, var.scale = 1,
ellipse = TRUE,
circle = TRUE)
library(ggbiplot)
install.packages("ggbiplot")
install_github("ggbiplot", "vqv")
library(ggbiplot)
g <- ggbiplot(iris2, obs.scale = 1, var.scale = 1,
ellipse = TRUE,
circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
trans = preProcess(iris_set[,1:3],
method=c("range", "center",
"scale", "pca"))
trans = preProcess(iris_set[,1:3],
method=c("range", "center",
"scale", "pca"))
trans$rotation
ibrary(ggbiplot)
g <- ggbiplot(quakes2, obs.scale = 1, var.scale = 1,
ellipse = TRUE,
circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
trans = preProcess(quakes[,3:5],
method=c("range", "center",
"scale", "pca"))
trans$rotation
quakes
trans = preProcess(iris_set[,1:3],
method=c("range", "center",
"scale", "pca"))
summary(iris2)
library(ggbiplot)
g <- ggbiplot(iris2, obs.scale = 1, var.scale = 1,
ellipse = TRUE,
circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
log.iris_set <- log(iris_set[2:4])
iris2 <- prcomp(log.iris_set,
center = TRUE,
scale. = TRUE)
plot(iris2, type = "l")
summary(iris2)
library(ggbiplot)
g <- ggbiplot(iris2, obs.scale = 1, var.scale = 1,
ellipse = TRUE,
circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
summary(iris2)
trans = preProcess(iris_set[,2:4],
method=c("range", "center",
"scale", "pca"))
trans$rotation
trans = preProcess(iris_set[,2:4],
method=c("range", "center",
"scale", "pca"))
print(g)
trans = preProcess(iris_set[,2:4],
method=c("range", "center",
"scale", "pca"))
log.iris_set <- log(iris_set[3:5])
iris2 <- prcomp(log.iris_set,
center = TRUE,
scale. = TRUE)
plot(iris2, type = "l")
summary(iris2)
library(ggbiplot)
g <- ggbiplot(iris2, obs.scale = 1, var.scale = 1,
ellipse = TRUE,
circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
trans = preProcess(iris_set[,3:5],
method=c("range", "center",
"scale", "pca"))
quakes
trans = preProcess(iris_set[,3:5],
method=c("range", "center",
"scale", "pca"))
str(cancer)
cancer<-read.table("C:\\Users\\pbs99\\Desktop\\R_workspace\\Breast-Cancer.txt", header=FALSE,sep=",")
bankdata<-bankdata<-read.table("C:\\Users\\pbs99\\Desktop\\R_workspace\\bank-full.csv", header=TRUE,sep=";")
str(cancer)
iris_set <- read.csv("C:\\Users\\pbs99\\Desktop\\R_workspace\\iris.csv",header = TRUE)
str(iris_set)
boxplot(iris_set$Sepal.Length,xlab=" value", main="Box Plot Magnitude")
stat<-boxplot.stats(iris_set$Sepal.Length)
stat
stat1<-st$stats[1]
stat1<-stat$stats[1]
stat5<-stat$stats[5]
modified <- iris_set[ which(!(iris_set$Sepal.Length <stat1 | iris_set$Sepal.Length  > stat5)),]
boxplot(modified$Sepal.Length,xlab=" value", main="Box Plot Magnitude 1")
library(DMwR)
iris_set1 <- read.csv("C:\\Users\\pbs99\\Desktop\\R_workspace\\iris_set.csv",header = TRUE)
iris_set_ch<- knnImputation(iris_set1)
sum(is.na(iris_set1))
sum(is.na(iris_set_ch))
iris_set
library(caret)
norm <- preProcess(iris,method=c("range"))
norm
norm <- preProcess(iris_set,method=c("range"))
norm
changed_data<- predict(norm, iris)
changed_data<- predict(norm, iris_set)
changed_data
str(bankdata)
bankdata.data = table(bankdata$loan, bankdata$housing)
print(bankdata.data)
print(chisq.test(bankdata.data))
cov(bankdata$balance,bankdata$age)
library("MASS")
car.data <- data.frame(Cars93$AirBags, Cars93$Type)
car.data = table(Cars93$AirBags, Cars93$Type)
print(car.data)
print(chisq.test(car.data))
print(chisq.test(car.data))
car.data
car
cars
Cars93
preprocessParams <- preProcess(iris[,1:4], method=c("scale"))
print(preprocessParams)
transformed <- predict(preprocessParams, iris[,1:4])
summary(transformed)
# Normalising data between values 0 and 1
library(caret)
data(iris)
summary(iris[,1:4])
preprocessParams <- preProcess(iris[,1:4], method=c("range"))
print(preprocessParams)
transformed <- predict(preprocessParams, iris[,1:4])
summary(transformed)
iris_set
#data transfortmation
library(caret)
norm <- preProcess(iris_set,method=c("range"))
norm
changed_data<- predict(norm, iris_set)
changed_data
str(bankdata)
bankdata.data = table(bankdata$loan, bankdata$housing)
print(bankdata.data)
print(chisq.test(bankdata.data))
cov(bankdata$balance,bankdata$age)
library("MASS")
car.data <- data.frame(Cars93$AirBags, Cars93$Type)
car.data = table(Cars93$AirBags, Cars93$Type)
print(car.data)
print(chisq.test(car.data))
cov(duration, waiting)
data("faithful")
duration = faithful$eruptions   # eruption durations
waiting = faithful$waiting      # the waiting period
cov(duration, waiting)          # apply the cov function
str(iris_set)
iris_set.data = table(iris_set$Sepal.Length, iris_set$Sepal.Width)
print(iris_set.data)
print(chisq.test(iris_set.data))
cov(bankdata$balance,bankdata$age)
cov(iris_set$Sepal.Length,iris_set$Sepal.Width)
str(iris_set)
iris_set.data = table(iris_set$Sepal.Length, iris_set$Petal.Length)
print(iris_set.data)
print(chisq.test(iris_set.data))
cov(iris_set$Sepal.Length,iris_set$Petal.Length)
log.iris_set <- log(iris_set[3:5])
iris2 <- prcomp(log.iris_set,
center = TRUE,
scale. = TRUE)
plot(iris2, type = "l")
summary(iris2)
library(ggbiplot)
g <- ggbiplot(iris2, obs.scale = 1, var.scale = 1,
ellipse = TRUE,
circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
library(ggbiplot)
graph_p <- ggbiplot(iris2, obs.scale = 1, var.scale = 1,
ellipse = TRUE,
circle = TRUE)
graph_p <- graph_p + scale_color_discrete(name = '')
graph_p <- graph_p + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(graph_p)
trans = preProcess(iris_set[,3:5],
method=c("range", "center",
"scale", "pca"))
trans$rotation
quakes
library(ggbiplot)
g <- ggbiplot(quakes2, obs.scale = 1, var.scale = 1,
ellipse = TRUE,
circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
trans = preProcess(quakes[,3:5],
method=c("range", "center",
"scale", "pca"))
graph_p <- graph_p + scale_color_discrete(name = '')
graph_p <- graph_p + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(graph_p)
str(quakes)
#m<-mean(quakes$depth)
#groupdepth<-(quakes$depth<m)
log.iris_set <- log(iris_set[2:4])
iris2 <- prcomp(log.iris_set,
center = TRUE,
scale. = TRUE)
plot(iris2, type = "l")
summary(iris2)
library(devtools)
#install_github("ggbiplot", "vqv")
library(ggbiplot)
graph_p <- ggbiplot(iris2, obs.scale = 1, var.scale = 1,
ellipse = TRUE,
circle = TRUE)
graph_p <- graph_p + scale_color_discrete(name = '')
graph_p <- graph_p + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(graph_p)
trans = preProcess(iris_set[,2:4],
method=c("range", "center",
"scale", "pca"))
library(devtools)
require(caret)
library(ggbiplot)
g <- ggbiplot(quakesmod, obs.scale = 1, var.scale = 1,groups =groupdepth , ellipse = TRUE, circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal',legend.position = 'top')
print(g)
trans = preProcess(quakes[,3:5],method=c("BoxCox","center","scale","pca"))
trans$rotation
trans = preProcess(iris_set[,2:4],method=c("BoxCox","center","scale","pca"))
trans$rotation
cancer<-read.table("C:\\Users\\pbs99\\Desktop\\R_workspace\\Breast-Cancer.txt", header=FALSE,sep=",")
bankdata<-bankdata<-read.table("C:\\Users\\pbs99\\Desktop\\R_workspace\\bank-full.csv", header=TRUE,sep=";")
str(cancer)
#data cleaning
#outlier analysis
iris_set <- read.csv("C:\\Users\\pbs99\\Desktop\\R_workspace\\iris.csv",header = TRUE)
str(iris_set)
boxplot(iris_set$Sepal.Length,xlab=" value", main="Box Plot Magnitude")
stat<-boxplot.stats(iris_set$Sepal.Length)
stat
stat1<-stat$stats[1]
stat5<-stat$stats[5]
modified <- iris_set[ which(!(iris_set$Sepal.Length <stat1 | iris_set$Sepal.Length  > stat5)),]
boxplot(modified$Sepal.Length,xlab=" value", main="Box Plot Magnitude 1")
#missing values
library(DMwR)
iris_set1 <- read.csv("C:\\Users\\pbs99\\Desktop\\R_workspace\\iris_set.csv",header = TRUE)
iris_set_ch<- knnImputation(iris_set1)
sum(is.na(iris_set1))
sum(is.na(iris_set_ch))
iris_set
#data transfortmation
library(caret)
norm <- preProcess(iris_set,method=c("range"))
norm
changed_data<- predict(norm, iris_set)
changed_data
# #binning
# tapply(quakes$mag,cut(quakes$mag,10),median)
str(iris_set)
iris_set.data = table(iris_set$Sepal.Length, iris_set$Petal.Length)
print(iris_set.data)
print(chisq.test(iris_set.data))
cov(iris_set$Sepal.Length,iris_set$Petal.Length)
#pca
str(quakes)
#m<-mean(quakes$depth)
#groupdepth<-(quakes$depth<m)
log.iris_set <- log(iris_set[2:4])
iris2 <- prcomp(log.iris_set,
center = TRUE,
scale. = TRUE)
plot(iris2, type = "l")
summary(iris2)
library(devtools)
#install_github("ggbiplot", "vqv")
library(ggbiplot)
graph_p <- ggbiplot(iris2, obs.scale = 1, var.scale = 1,
ellipse = TRUE,
circle = TRUE)
graph_p <- graph_p + scale_color_discrete(name = '')
graph_p <- graph_p + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(graph_p)
trans = preProcess(iris_set[,2:4],method=c("BoxCox","center","scale","pca"))
trans$rotation
quakes
log.iris_set <- log(iris_set[2:4])
iris2 <- prcomp(log.iris_set,
center = TRUE,
scale. = TRUE)
plot(iris2, type = "l")
summary(iris2)
library(devtools)
#install_github("ggbiplot", "vqv")
library(ggbiplot)
graph_p <- ggbiplot(iris2, obs.scale = 1, var.scale = 1,
ellipse = TRUE,
circle = TRUE)
graph_p <- graph_p + scale_color_discrete(name = '')
graph_p <- graph_p + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(graph_p)
dat = preProcess(iris_set[,2:4],method=c("BoxCox","center","scale","pca"))
dat$rotation
trans = preProcess(iris_set[,2:4],method=c("BoxCox","center","scale","pca"))
trans$rotation
str(iris_set)
iris_set.data = table(iris_set$Sepal.Length, iris_set$Petal.Length)
print(iris_set.data)
print(chisq.test(iris_set.data))
str(iris_set)
iris_set.data = table(iris_set$Sepal.Length, iris_set$Petal.Length)
print(iris_set.data)
print(chisq.test(iris_set.data))
cov(iris_set$Sepal.Length,iris_set$Petal.Length)
str(iris_set)
iris_set.data = table(iris_set$Sepal.Length, iris_set$Petal.Length)
print(iris_set.data)
print(chisq.test(iris_set.data))
iris_set <- read.csv("C:\\Users\\pbs99\\Desktop\\R_workspace\\iris.csv",header = TRUE)
str(iris_set)
boxplot(iris_set$Sepal.Length,xlab=" value", main="Box Plot Magnitude")
stat<-boxplot.stats(iris_set$Sepal.Length)
stat
stat1<-stat$stats[1]
stat5<-stat$stats[5]
modified <- iris_set[ which(!(iris_set$Sepal.Length <stat1 | iris_set$Sepal.Length  > stat5)),]
boxplot(modified$Sepal.Length,xlab=" value", main="Box Plot Magnitude 1")
boxplot(iris_set$Sepal.Length,xlab=" value", main="Box Plot Magnitude")
library(DMwR)
iris_set1 <- read.csv("C:\\Users\\pbs99\\Desktop\\R_workspace\\iris_set.csv",header = TRUE)
iris_set_ch<- knnImputation(iris_set1)
sum(is.na(iris_set1))
sum(is.na(iris_set_ch))
library(caret)
norm <- preProcess(iris_set,method=c("range"))
norm
changed_data<- predict(norm, iris_set)
changed_data
str(iris_set)
iris_set.data = table(iris_set$Sepal.Length, iris_set$Petal.Length)
print(iris_set.data)
print(chisq.test(iris_set.data))
#data reduction
log.iris_set <- log(iris_set[2:4])
iris2 <- prcomp(log.iris_set,
center = TRUE,
scale. = TRUE)
plot(iris2, type = "l")
summary(iris2)
library(devtools)
#install_github("ggbiplot", "vqv")
library(ggbiplot)
graph_p <- ggbiplot(iris2, obs.scale = 1, var.scale = 1,
ellipse = TRUE,
circle = TRUE)
graph_p <- graph_p + scale_color_discrete(name = '')
graph_p <- graph_p + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(graph_p)
dat = preProcess(iris_set[,2:4],method=c("BoxCox","center","scale","pca"))
dat$rotation
dat = preProcess(iris_set[,2:4],method=c("BoxCox","center","scale","pca"))
dat$rotation
quakes
library(caret)
normalisation <- preProcess(iris_set,method=c("range"))
normalisation
changed_data<- predict(normalisation, iris_set)
changed_data
str(iris_set)
iris_set.data = table(iris_set$Sepal.Length, iris_set$Petal.Length)
print(iris_set.data)
print(chisq.test(iris_set.data))
cov(iris_set$Sepal.Length,iris_set$Petal.Length)
library(ggbiplot)
graph_p <- ggbiplot(iris2, obs.scale = 1, var.scale = 1,  ellipse = TRUE,circle = TRUE)
graph_p <- graph_p + scale_color_discrete(name = '')
graph_p <- graph_p + theme(legend.direction = 'horizontal', legend.position = 'top')
print(graph_p)
dat = preProcess(iris_set[,2:4],method=c("BoxCox","center","scale","pca"))
dat$rotation
iris_set <- read.csv("C:\\Users\\pbs99\\Desktop\\R_workspace\\iris.csv",header = TRUE)
str(iris_set)
boxplot(iris_set$Sepal.Length,xlab=" value", main="Box Plot Magnitude")
stat<-boxplot.stats(iris_set$Sepal.Length)
stat
stat1<-stat$stats[1]
stat5<-stat$stats[5]
modified <- iris_set[ which(!(iris_set$Sepal.Length <stat1 | iris_set$Sepal.Length  > stat5)),]
boxplot(modified$Sepal.Length,xlab=" value", main="Box Plot Magnitude 1")
#missing values
library(DMwR)
iris_set1 <- read.csv("C:\\Users\\pbs99\\Desktop\\R_workspace\\iris_set.csv",header = TRUE)
iris_set_ch<- knnImputation(iris_set1)
sum(is.na(iris_set1))
sum(is.na(iris_set_ch))
iris_set_ch<- knnImputation(iris_set1)
iris_set_ch
library(caret)
normalisation <- preProcess(iris_set,method=c("range"))
normalisation
changed_data<- predict(normalisation, iris_set)
changed_data
str(iris_set)
iris_set.data = table(iris_set$Sepal.Length, iris_set$Petal.Length)
print(iris_set.data)
print(chisq.test(iris_set.data))
cov(iris_set$Sepal.Length,iris_set$Petal.Length)
log.iris_set <- log(iris_set[2:4])
iris2 <- prcomp(log.iris_set,center = TRUE,scale. = TRUE)
plot(iris2, type = "l")
summary(iris2)
library(ggbiplot)
graph_p <- ggbiplot(iris2, obs.scale = 1, var.scale = 1,  ellipse = TRUE,circle = TRUE)
graph_p <- graph_p + scale_color_discrete(name = '')
graph_p <- graph_p + theme(legend.direction = 'horizontal', legend.position = 'top')
print(graph_p)
dat = preProcess(iris_set[,2:4],method=c("BoxCox","center","scale","pca"))
dat$rotation
